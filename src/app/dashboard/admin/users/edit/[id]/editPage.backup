"use client"
import { faAngleLeft, faBan, faPlus } from '@fortawesome/free-solid-svg-icons'
import { faTrashCan, faPenToSquare, faFloppyDisk } from '@fortawesome/free-regular-svg-icons'
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'
import { FormEvent, useEffect, useRef, useState } from 'react'
import { useGetAllBagian, GetDetailUserInfo, apiURL, updateDataUser } from "@/app/lib/admin/users/userAPIRequest"
import { Image } from "react-bootstrap"
import { useRouter } from 'next/navigation'
import axios from 'axios'
import toast, { Toaster } from 'react-hot-toast'

export function EditUser({ params }: { params: { id: string, session: string } }) {
    const router = useRouter()

    const { detailBagian, isLoadingBagian, error, mutateBagian } = useGetAllBagian(params.session)
    const { detailUser, detailUserLoading, mutateUser } = GetDetailUserInfo(params.id, params.session)


    const [editBagianIndex, setEditBagianIndex] = useState<number | null>()
    const [editBagianJabatan, setEditBagianJabatan] = useState<any[]>([])
    const [listBagian, setListBagian] = useState<any>([])
    const [listJabatan, setListJabatan] = useState<any>([])

    const [tambahActive, setTambahActive] = useState(false)
    const [newBagianJabatan, setNewBagianJabatan] = useState<any[]>([])
    const newBagianRefs = useRef<(HTMLSelectElement | null)[]>([]);
    const newJabatanRefs = useRef<(HTMLSelectElement | null)[]>([]);


    const bagianRefs = useRef<(HTMLSelectElement | null)[]>([]);
    const jabatanRefs = useRef<(HTMLSelectElement | null)[]>([]);

    useEffect(() => {

        if (!detailUserLoading && detailUser?.data) {
            setEditBagianJabatan(detailUser.data.bagianjabatan || [])
        }

        if (!isLoadingBagian && detailBagian?.data) {
            setListBagian(detailBagian)
        }

    }, [detailUser, detailUserLoading, isLoadingBagian, detailBagian])

    async function handleSaveChanges(e: FormEvent<HTMLFormElement>) {
        e.preventDefault()
        const formData = new FormData(e.currentTarget)
        const password = formData.get("newPassword") === "default" ? "" : formData.get("newPassword")
        const isAdmin = formData.get("isAdmin") == "1" ? "true" : "false"
        const isActive = formData.get("isActive") == "1" ? "true" : "false"

        try {
            await updateDataUser({
                data: {
                    id: params.id,
                    password: password!.toString(),
                    isAdmin: isAdmin,
                    isActive: isActive
                },
                session: params.session
            })

            toast.success("User Berhasil Diupdate")
            await mutateUser()

        } catch (e: any) {
            toast.error("User Gagal Diupdate")
        }
    }

    async function handleEdit(e: any, index: number) {
        e.preventDefault()
        const bagianValue = bagianRefs.current[index]?.value
        const listJabatanFetch = await axios.get(apiURL + "/admin/department_employment/findJabatan/" + bagianValue, {
            headers: {
                "Content-Type": "application/json",
                "Authorization": "Bearer " + params.session
            }
        })
        setListJabatan(listJabatanFetch.data.data)
        setEditBagianIndex(index)
    }

    async function handleDelete(e: any, index: number) {
        e.preventDefault()
        const currentId = bagianRefs.current[index]?.getAttribute("data-id")
        if (currentId) {
            try {
                const deleteAction = await axios.delete(apiURL + "/admin/users/deleteJabatan/" + currentId, {
                    headers: {
                        "Content-Type": "application/json",
                        "Authorization": "Bearer " + params.session
                    }
                })

                if (deleteAction.data) {
                    toast.success("Delete Berhasil!")
                    mutateUser()
                } else {
                    toast.error("Delete Gagal")
                }
            } catch (e) {
                toast.error("Delete Gagal")
            }


        }
    }

    async function handleBagianChange(e: any) {
        const listJabatanFetch: any = await axios.get(apiURL + "/admin/department_employment/findJabatan/" + e.target.value, {
            headers: {
                "Content-Type": "application/json",
                "Authorization": "Bearer " + params.session
            }
        })
        setListJabatan(listJabatanFetch.data.data)
    }

    async function handleSimpanBagianJabatan(i: number) {
        try {
            const currentId = bagianRefs.current[i]?.getAttribute("data-id")
            const currentBagianId = bagianRefs.current[i]?.value
            const currentJabatanId = jabatanRefs.current[i]?.value

            const editProcess = await axios.patch(apiURL + "/admin/users/updateUserJabatan/" + currentId, {
                newBagian: currentBagianId,
                newJabatan: currentJabatanId
            }, {
                headers: {
                    "Content-Type": "application/json",
                    "Authorization": "Bearer " + params.session
                }
            })

            if (editProcess.data) {
                toast.success("Update Berhasil")
                mutateUser()
                setEditBagianIndex(null)
            } else {
                toast.error("Update Gagal")
            }
        } catch (e) {
            toast.error("Update Gagal")
        }
    }

    async function handleTambahJabatan() {
        setNewBagianJabatan([{ idBagianJabatan: 0 }])
        setEditBagianIndex(null)
    }

    async function handleSimpanNewBagianJabatan() {
        const newBagian = newBagianRefs.current[0]?.value
        const newJabatan = newJabatanRefs.current[0]?.value

        try {
            const processInsert = axios.post(apiURL + "/admin/users/addUserJabatan", {
                id: detailUser.data.id,
                newBagian: newBagian,
                newJabatan: newJabatan
            }, {
                headers: {
                    "Content-Type": "application/json",
                    "Authorization": "Bearer " + params.session
                }
            })

            if ((await processInsert).data) {
                toast.success("Tambah Berhasil")
                mutateUser()
                setTambahActive(false)
                setNewBagianJabatan([])
            } else {
                toast.error("Tambah Gagal")
            }

        } catch (e) {
            toast.error("Tambah Gagal")
        }
    }

    if (detailUserLoading) {
        return <p>Loading....</p>;
    }

    if (!detailUser || !detailUser.data) {
        return <></>;
    }

    return (
        <div>
            <button className="btn btn-sm btn-warning text-white mt-3 mb-2" onClick={() => {
                router.back()
                toast.remove()
            }}><FontAwesomeIcon icon={faAngleLeft} /> &nbsp; Back</button>
            {detailUser &&
                <div className='card'>
                    <div className='card-header'>
                        Edit User
                    </div>
                    <div className='card-body p-3'>
                        <div className="d-flex justify-content-center align-items-start">
                            <div className="w-100  row align-items-start">
                                <div className="col-3 d-flex justify-content-center">
                                    <Image src="/users-profile/default-profile.jpg" width={80} height={120} alt="profilephoto"></Image>
                                </div>
                                <div className="col-9">
                                    <div className="ps-3 pt-4">
                                        <form onSubmit={handleSaveChanges}>
                                            <div className="mb-3 row">
                                                <label htmlFor="staticEmail" className="col-sm-4 col-form-label">Email</label>
                                                <div className="col-sm-8">
                                                    <input type="text" readOnly className="form-control-plaintext" id="staticEmail" value={detailUser.data.email} />
                                                </div>
                                            </div>

                                            <div className="mb-3 row">
                                                <label htmlFor="inputPassword" className="col-sm-4 col-form-label">Password</label>
                                                <div className="col-sm-8">
                                                    <input type="password" className="form-control" name="newPassword" id="inputPassword" defaultValue="default" />
                                                </div>
                                            </div>

                                            <div className="mb-3 row">
                                                <div className="col-sm-4 col-form-label">Status Admin</div>
                                                <div className="col-sm-8">
                                                    <select defaultValue={detailUser.data.isAdmin === true ? "1" : "0"} name="isAdmin" className="form-select">
                                                        <option value="0">No</option>
                                                        <option value="1">Yes</option>
                                                    </select>
                                                </div>
                                            </div>

                                            <div className="mb-3 row">
                                                <div className="col-sm-4 col-form-label">Status Active</div>
                                                <div className="col-sm-8">
                                                    <select defaultValue={detailUser.data.isActive === true ? "1" : "0"} name="isActive" className="form-select">
                                                        <option value="0">No</option>
                                                        <option value="1">Yes</option>
                                                    </select>
                                                </div>
                                            </div>

                                            {!isLoadingBagian && editBagianJabatan.map((item: any, index: number) => (
                                                <div key={index} className="mb-3 row">
                                                    <div className="col-sm-4 col-form-label">Jabatan {index + 1}</div>
                                                    <div className="col-sm-6">
                                                        <div className="row mb-1">
                                                            <div className="col-sm-3">
                                                                Bagian
                                                            </div>
                                                            <div className="col-sm-9 text-wrap text-break">
                                                                <select className="form-select" ref={(el) => { bagianRefs.current[index] = el }} data-id={item.idBagianJabatan} defaultValue={item.bagianJabatan.bagian.id} onChange={(e) => {
                                                                    handleBagianChange(e)
                                                                }} disabled={editBagianIndex !== index}>
                                                                    {detailBagian && detailBagian.data.map((item: any, index: number) => (
                                                                        <option key={item.id} value={item.id}>{item.namaBagian}</option>
                                                                    ))}
                                                                </select>
                                                            </div>
                                                        </div>
                                                        <div className="row">
                                                            <div className="col-sm-3">
                                                                Jabatan
                                                            </div>
                                                            <div className="col-sm-9 text-wrap text-break">
                                                                <select className="form-select" defaultValue={item.bagianJabatan.jabatan.id} ref={(el) => { jabatanRefs.current[index] = el }} disabled={editBagianIndex !== index}>
                                                                    {editBagianIndex === index && listJabatan.map((item: any) => (
                                                                        <option key={item.idJabatanFK.id} value={item.idJabatanFK.id}>{item.idJabatanFK.namaJabatan}</option>
                                                                    ))}
                                                                    {editBagianIndex !== index &&
                                                                        <option value={item.bagianJabatan.jabatan.id}>{item.bagianJabatan.jabatan.namaJabatan}</option>
                                                                    }
                                                                </select>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div className="col-sm-2">
                                                        {editBagianIndex === index &&
                                                            <>
                                                                <button className='btn btn-sm btn-success text-white mb-1' onClick={(e) => {
                                                                    e.preventDefault()
                                                                    handleSimpanBagianJabatan(index)
                                                                }}>
                                                                    <FontAwesomeIcon icon={faFloppyDisk} style={{ color: "#ffffff" }} />&nbsp; Simpan
                                                                </button>
                                                                <button className='btn btn-sm btn-danger text-white' onClick={(e) => {
                                                                    e.preventDefault()
                                                                    setEditBagianIndex(null)
                                                                }}>
                                                                    <FontAwesomeIcon icon={faBan} style={{ color: "#ffffff" }} />&nbsp; Batal
                                                                </button>
                                                            </>
                                                        }
                                                        {tambahActive == false && editBagianIndex !== index && <>
                                                            <button className="btn btn-sm btn-warning m-1" onClick={(e) => {
                                                                handleEdit(e, index)
                                                            }}>
                                                                <FontAwesomeIcon icon={faPenToSquare} style={{ color: "#ffffff" }} />
                                                            </button>
                                                            <button className="btn btn-sm btn-danger m-1" onClick={(e) => {
                                                                handleDelete(e, index)
                                                            }}>
                                                                <FontAwesomeIcon icon={faTrashCan} style={{ color: "#ffffff" }} />
                                                            </button>
                                                        </>}
                                                    </div>
                                                </div>
                                            ))}

                                            {newBagianJabatan && newBagianJabatan.map((item: any, index: number) => (
                                                <div key={index} className="mb-3 row">
                                                    <div className="col-sm-4 col-form-label">Jabatan {editBagianJabatan.length + 1}</div>
                                                    <div className="col-sm-6">
                                                        <div className="row mb-1">
                                                            <div className="col-sm-3">
                                                                Bagian
                                                            </div>
                                                            <div className="col-sm-9 text-wrap text-break">
                                                                <select className="form-select" ref={(el) => { newBagianRefs.current[index] = el }} onChange={(e) => {
                                                                    handleBagianChange(e)
                                                                }}>
                                                                    <option value="">--- Pilih Bagian ---</option>
                                                                    {detailBagian && detailBagian.data.map((item: any, index: number) => (
                                                                        <option key={item.id} value={item.id}>{item.namaBagian}</option>
                                                                    ))}
                                                                </select>
                                                            </div>
                                                        </div>
                                                        <div className="row">
                                                            <div className="col-sm-3">
                                                                Jabatan
                                                            </div>
                                                            <div className="col-sm-9 text-wrap text-break">
                                                                <select className="form-select" ref={(el) => { newJabatanRefs.current[index] = el }}>
                                                                    <option value="">--- Pilih Jabatan ---</option>
                                                                    {listJabatan.map((item: any) => (
                                                                        <option key={item.idJabatanFK.id} value={item.idJabatanFK.id}>{item.idJabatanFK.namaJabatan}</option>
                                                                    ))}
                                                                </select>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div className="col-sm-2">


                                                        <button className='btn btn-sm btn-success text-white mx-1' onClick={(e) => {
                                                            e.preventDefault()
                                                            handleSimpanNewBagianJabatan()
                                                        }}>
                                                            <FontAwesomeIcon icon={faFloppyDisk} style={{ color: "#ffffff" }} />&nbsp; Simpan
                                                        </button>
                                                        <button className='btn btn-sm btn-danger text-white mx-1' onClick={(e) => {
                                                            e.preventDefault()
                                                            setNewBagianJabatan([])
                                                            setTambahActive(false)
                                                        }}>
                                                            <FontAwesomeIcon icon={faBan} style={{ color: "#ffffff" }} />&nbsp; Batal
                                                        </button>

                                                    </div>
                                                </div>
                                            ))}

                                            <div className="mb-3 row">
                                                <div className="col-sm-4 col-form-label"></div>
                                                <div className="col-sm-8 col-form-label">
                                                    {tambahActive == true && <></>}
                                                    {tambahActive == false && <button className='btn btn-sm btn-success' onClick={(e) => {
                                                        e.preventDefault()
                                                        setTambahActive(true)
                                                        handleTambahJabatan()
                                                    }}>
                                                        <FontAwesomeIcon icon={faPlus} /> &nbsp; Tambah Jabatan
                                                    </button>}

                                                </div>
                                            </div>

                                            <div className="mb-3 row">
                                                <div className="col-sm-12 d-flex justify-content-end col-form-label">
                                                    <button className='btn btn-sm btn-success' type="submit">
                                                        <FontAwesomeIcon icon={faFloppyDisk} /> &nbsp; Simpan Perubahan
                                                    </button>
                                                </div>
                                            </div>

                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>}
            <Toaster />
        </div>
    )
}